{"version":3,"sources":["assets/ErdalCv.jpg","components/pages/HomePage.js","components/pages/Lotto.js","NavBar.js","TodoStore.js","components/pages/Pdf.js","components/pages/Mulitdropdown.js","components/pages/PigGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","className","src","ErdalCv","alt","href","Component","Lotto","onClick","onChange","ProgressBar","striped","variant","animated","now","observer","NavBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","TodoStore","onIncrement","counter","onDecrement","extendObservable","this","type","Pdf","class","options","value","label","Multidropdown","style","width","PigGame","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb232730.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ErdalCv.ed129f86.jpg\";","import React, { Component } from \"react\";\r\nimport ErdalCv from \"../../assets/ErdalCv.jpg\";\r\n\r\nexport class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"App-header\">\r\n          <p>\r\n            <h1>Mitt CV </h1>\r\n          </p>\r\n          <img src={ErdalCv} className=\"App-logo\" alt=\"ErdalCv\" />\r\n          <a href=\"https://erdal-u.github.io/myresume/\">\r\n            erdal.ustalar@gmail.com\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\nexport class Lotto extends Component {\r\n  onChange() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>1</label>\r\n        <input></input>\r\n        <br />\r\n        <label>2</label>\r\n        <input></input>\r\n        <br />\r\n        <label>3</label>\r\n        <input></input>\r\n        <br />\r\n        <label>4</label>\r\n        <input></input>\r\n        <br />\r\n        <label>5</label>\r\n        <input></input>\r\n        <br />\r\n        <label>6</label>\r\n        <input></input>\r\n        <br />\r\n        <label>7</label>\r\n        <input></input>\r\n        <br />\r\n        <label>8</label>\r\n        <input></input>\r\n        <br />\r\n        <label>9</label>\r\n        <input></input>\r\n        <br />\r\n        <label>10</label>\r\n        <input></input>\r\n        <button onClick={() => this.onChange()}>Play</button>\r\n        <div>\r\n      <ProgressBar striped variant=\"success\" animated now={45}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Lotto);\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">Mr Erdal</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"todostore\">Projekt</Nav.Link>\r\n            <Nav.Link href=\"lotto\">Lotto</Nav.Link>\r\n            <Nav.Link href=\"piggame\">Pig Game</Nav.Link>\r\n            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { extendObservable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"./components/pages/pages.css\";\r\n\r\nclass TodoStore extends Component {\r\n  constructor() {\r\n    super();\r\n    extendObservable(this, {\r\n      counter: 0\r\n    });\r\n  }\r\n  onIncrement = () => {\r\n    this.counter++;\r\n  };\r\n  onDecrement = () => {\r\n    this.counter--;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"bgImage\">\r\n      <div >\r\n        {this.counter}\r\n        <button onClick={this.onIncrement} type=\"button\">\r\n          Increment\r\n        </button>\r\n        <button onClick={this.onDecrement} type=\"button\">\r\n          Decrement\r\n        </button>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default observer(TodoStore);\r\n","import React, { Component } from 'react'\r\nimport \"./Spinner.css\"\r\n\r\nexport class Pdf extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n            <div class=\"dash squareOne\"></div>\r\n            <div class=\"dash squareTwo\"></div>\r\n            <div class=\"dash squareThree\"></div>\r\n            <div class=\"dash squareFour\"></div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pdf;\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n]\r\n\r\nconst Multidropdown = () => (\r\n  <Select style={{width: \"200px\"}} options={options} />\r\n)\r\n\r\nexport default Multidropdown;","import React, { Component } from 'react';\r\nimport \"./pages.css\";\r\nimport Pdf from \"./Pdf\"\r\nimport Multidropdown from \"./Mulitdropdown\";\r\n\r\nexport class PigGame extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \t<body className=\"loadingBody\">\r\n\t  \t<div class=\"loader\">\r\n\t\t\t<span>L</span>\r\n\t\t\t<span>A</span>\r\n\t\t\t<span>D</span>\r\n\t\t\t<span>D</span>\r\n\t\t\t<span>A</span>\r\n\t\t\t<span>R</span>\r\n      <span>...</span>\r\n\t\t</div>\r\n    <Pdf/>\r\n\t<Multidropdown/>\r\n \r\n\t</body>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PigGame\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { HomePage, Lotto } from \"./components/pages/index\";\r\nimport NavBar from \"./NavBar\";\r\nimport TodoStore from \"./TodoStore\";\r\nimport PigGame from \"./components/pages/PigGame\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n\r\n      <div>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/todostore\" component={TodoStore} />\r\n        <Route path=\"/lotto\" component={Lotto} />\r\n        <Route path=\"/piggame\" component={PigGame}/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}